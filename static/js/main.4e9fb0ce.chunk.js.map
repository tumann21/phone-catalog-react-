{"version":3,"sources":["components/Layout.tsx","products.ts","components/ProductCard.tsx","components/Category.tsx","components/ProductsSlider.tsx","components/HomePage.tsx","components/Loader/Loader.tsx","components/Pagination.tsx","components/ProductsList.tsx","components/Phones.tsx","App.tsx","index.tsx"],"names":["Layout","id","className","to","isActive","classNames","activeClass","spy","smooth","duration","PRODUCTS_URL","getHotPriceProducts","fetch","then","res","ok","Error","status","json","ProductCard","React","memo","products","title","useState","index","setIndex","data-cy","aria-label","type","onClick","state","length","style","width","transform","transition","map","el","src","imageUrl","alt","name","price","screen","capacity","ram","Category","ProductsSlider","setProducts","phonesWithDiscount","filter","discount","sortByPhonePrice","sort","a","b","useEffect","response","HomePage","step","setStep","timeoutRef","useRef","arrOfImages","resetTimeout","current","clearTimeout","setTimeout","prev","indx","Loader","Pagination","total","perPage","setPage","page","totalPageCount","Array","Math","ceil","_","i","disabled","item","ProductsList","setPerPage","location","useLocation","navigate","useNavigate","searchParams","URLSearchParams","search","selectedValue","get","age","localeCompare","value","onChange","e","set","delete","toString","handleSort","target","Phones","onlyPhones","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e9fb0ce.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Layout.scss';\nimport { Link } from 'react-scroll';\n\nexport const Layout = () => {\n  return (\n    <>\n      <header>\n        <div id=\"top\" className=\"nav\">\n          <div className=\"container\">\n            <NavLink className=\"logo\" to=\"/\" />\n            <NavLink className=\"hamburger\" to=\"/\" />\n            <NavLink\n              className={({ isActive }) => classNames('nav__link',\n                { 'active-link': isActive })}\n              to=\"/\"\n            >\n              home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => classNames('nav__link',\n                { 'active-link': isActive })}\n              to=\"/phones\"\n            >\n              Phones\n            </NavLink>\n            <NavLink className=\"nav__link\" to=\"/tablets\">tablets</NavLink>\n            <NavLink className=\"nav__link\" to=\"/accessor\">accessories</NavLink>\n          </div>\n\n          <div className=\"nav__icons\">\n            <div className=\"nav__icons-stroke interactive\" />\n            <div className=\"nav__icons-shoppingBag interactive\" />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"main\">\n        <Outlet />\n      </main>\n\n      <footer className=\"footer\">\n        <NavLink className=\"logo\" to=\"/\" />\n        <div className=\"footer-center\">\n          <NavLink className=\"footer__link\" to=\"/\">Github</NavLink>\n          <NavLink className=\"footer__link\" to=\"/\">Contacts</NavLink>\n          <NavLink className=\"footer__link\" to=\"/\">rights</NavLink>\n        </div>\n        <Link activeClass=\"active\" to=\"top\" spy smooth duration={500}>\n          <div className=\"footer__top\">\n            <div className=\"footer__link-top\">Back to top</div>\n            <div className=\"footer__button\" />\n          </div>\n        </Link>\n      </footer>\n\n    </>\n  );\n};\n","const PRODUCTS_URL\n  = 'https://mate-academy.github.io/react_phone-catalog/api/products.json';\n\nexport const getProducts = () => {\n  return fetch(PRODUCTS_URL)\n    .then(response => response.json());\n};\n\nexport const getHotPriceProducts = () => {\n  return fetch(PRODUCTS_URL)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.status}`);\n      }\n\n      return res.json();\n    });\n};\n","import React, { useState } from 'react';\nimport { Product } from '../types';\nimport './ProductCard.scss';\n\ntype Props = {\n  products: Product[],\n  title: string,\n};\n\nexport const ProductCard: React.FC<Props> = React.memo(({\n  products,\n  title,\n}) => {\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  // console.log(products);\n\n  const handleClickLeft = () => {\n    if (index < 3) {\n      setIndex(0);\n    } else {\n      setIndex(state => state - 3);\n    }\n  };\n\n  const handleClickRight = () => {\n    if (index + 4 === products.length) {\n      setIndex(0);\n    } else if (index + 4 > products.length - 3) {\n      setIndex(products.length - 4);\n    } else {\n      setIndex(state => state + 3);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"cardsContainer\"\n      className=\"card\"\n    >\n      <div className=\"carousel-buttonSection\">\n        <h1 className=\"hotPrice\">{title}</h1>\n        <div className=\"button-wraper\">\n          <button\n            aria-label=\"button\"\n            type=\"button\"\n            className=\"buttons left\"\n            onClick={handleClickLeft}\n          />\n          <button\n            aria-label=\"button\"\n            type=\"button\"\n            className=\"buttons right\"\n            onClick={handleClickRight}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"card__wrapper\"\n        style={{\n          width: 272 * 4 + 48,\n        }}\n      >\n        <ul\n          className=\"card__list\"\n          style={{\n            transform: `translateX(-${288 * index}px)`,\n            transition: '0.5s ease-in-out',\n          }}\n        >\n          {products.map(el => {\n            return (\n              <li key={el.id}>\n                <div className=\"phone-container card__body\">\n                  <div className=\"img-container\">\n                    <img className=\"card__img\" src={el.imageUrl} alt=\"\" />\n                  </div>\n                  <p className=\"card__title\">{el.name}</p>\n                  <p className=\"card__description\">\n                    {`$${el.price}`}\n                    <span className=\"card__description-line\">{`$${el.price + 100}`}</span>\n                  </p>\n\n                  <span className=\"line\" />\n\n                  <div className=\"card__block\">\n                    <p className=\"card__block-parameters\">\n                      Screen\n                      <span className=\"card__block-parameter\">{el.screen}</span>\n                    </p>\n                    <p className=\"card__block-parameters\">\n                      Capacity\n                      <span className=\"card__block-parameter\">\n                        {el.capacity}\n                      </span>\n                    </p>\n                    <p className=\"card__block-parameters\">\n                      RAM\n                      <span className=\"card__block-parameter\">{el.ram}</span>\n                    </p>\n                  </div>\n\n                  <div className=\"card__add-section\">\n                    <button\n                      type=\"button\"\n                      className=\"card__btn\"\n                    >\n                      Add to card\n                    </button>\n\n                    <div className=\"card__stroke-section\">\n                      <div className=\"card__stroke\" />\n                    </div>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Category.scss';\n\nexport const Category: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title-category\">Shop by category</h1>\n\n      <div\n        data-cy=\"categoryLinksContainer\"\n        className=\"category-container\"\n      >\n        <NavLink className=\"category\" to=\"/phones\">\n          <div className=\"box phones\" />\n          <h3 className=\"title-category__phones\">Mobile phones</h3>\n          <p className=\"title-category__phones-mod\">95 models</p>\n        </NavLink>\n        <NavLink className=\"category\" to=\"/tablets\">\n          <div className=\"box tablets\" />\n          <h3 className=\"title-category__phones\">Tablets</h3>\n          <p className=\"title-category__phones-mod\">24 models</p>\n        </NavLink>\n        <NavLink className=\"category\" to=\"/accessories\">\n          <div className=\"box accessories\" />\n          <h3 className=\"title-category__phones\">Accessories</h3>\n          <p className=\"title-category__phones-mod\">100 models</p>\n        </NavLink>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getHotPriceProducts } from '../products';\nimport { Product } from '../types';\nimport { ProductCard } from './ProductCard';\nimport { Category } from './Category';\nimport './ProductsSlider.scss';\n\nexport const ProductsSlider: React.FC = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const hotPriceTitle = 'Hot Prices';\n  const brandNewTitle = 'Brand new models';\n  const phonesWithDiscount\n    = products.filter(el => el.type === 'phone' && el.discount > 0);\n  const phonesWithoutDiscount\n    = products.filter(el => el.type === 'phone' && el.discount === 0);\n  const sortByPhonePrice = phonesWithoutDiscount.sort((a, b) => {\n    return b.price - a.price;\n  });\n\n  // eslint-disable-next-line\n  // console.log(products);\n\n  useEffect(() => {\n    getHotPriceProducts()\n      .then(response => setProducts(response));\n  }, []);\n\n  return (\n    <>\n      <ProductCard\n        products={phonesWithDiscount}\n        title={hotPriceTitle}\n      />\n      <Category />\n      <ProductCard\n        products={sortByPhonePrice}\n        title={brandNewTitle}\n      />\n    </>\n\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport './HomePage.scss';\nimport { ProductsSlider } from './ProductsSlider';\n\nexport const HomePage: React.FC = () => {\n  const [step, setStep] = useState(0);\n  const timeoutRef = useRef<null | ReturnType<typeof setTimeout>>(null);\n  // const arrOfImages\n  //   = [\n  //     'url(../images/Banner.png)',\n  //     'url(../images/banner1.jpg)',\n  //     'url(../images/banner2.jpg)',\n  //   ];\n  const arrOfImages = ['0', '1', '2'];\n\n  const resetTimeout = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(\n      () => setStep((prev) => (prev === arrOfImages.length - 1 ? 0 : prev + 1)),\n      5000,\n    );\n\n    return () => {\n      resetTimeout();\n    };\n  }, [step]);\n\n  const handleClickNext = () => {\n    if (step > 1) {\n      setStep(0);\n    } else {\n      setStep(index => index + 1);\n    }\n  };\n\n  const handleClickPrev = () => {\n    if (step < 1) {\n      setStep(3);\n    }\n\n    setStep(index => index - 1);\n  };\n\n  return (\n    <>\n      <div className=\"homePage\">\n        <div className=\"slider-buttonSection\">\n          <div className=\"slider-wraper\">\n            <button\n              aria-label=\"button\"\n              type=\"button\"\n              className=\"button slide-left\"\n              onClick={handleClickPrev}\n\n            />\n            <div className=\"list-wrapper\">\n              <div\n                className={`slider-picture img-${step}`}\n              />\n\n              <div className=\"slideshowDots\">\n                {arrOfImages.map((indx) => (\n                  <div\n                    key={indx}\n                    className={classNames('slideshowDot',\n                      { isActive: step === +indx })}\n                  />\n                ))}\n              </div>\n            </div>\n            <button\n              aria-label=\"button\"\n              type=\"button\"\n              className=\"button slide-right\"\n              onClick={handleClickNext}\n            />\n          </div>\n        </div>\n        <ProductsSlider />\n      </div>\n    </>\n\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport './Pagination.scss';\nimport classNames from 'classnames';\n// import { useState } from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  setPage: (state: number) => void,\n  page: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  setPage,\n  page,\n}) => {\n  // const [page, setPage] = useState(1);\n  // eslint-disable-next-line\n  // console.log(page);\n\n  const totalPageCount\n    = [...Array(Math.ceil(total / perPage))].map((_, i) => i + 1);\n\n  const onPrevious = () => {\n    setPage(page - 1);\n  };\n\n  const onNext = () => {\n    setPage(page + 1);\n  };\n\n  // eslint-disable-next-line\n  // console.log(totalPageCount);\n\n  return (\n    <>\n      <p className=\"itemNumber\">\n        {`${(perPage * page - perPage) + 1} -\n        ${perPage * page > total\n      ? total : perPage * page} of ${total}`}\n      </p>\n      <div className=\"button-wraper\">\n        <button\n          aria-label=\"button\"\n          type=\"button\"\n          className=\"buttons left\"\n          disabled={page === 1}\n          onClick={onPrevious}\n        />\n        <div className=\"btn-pagination\">\n          {totalPageCount.map(item => (\n            <button\n              key={item}\n              type=\"button\"\n              onClick={() => setPage(item)}\n              className={classNames('buttons',\n                { 'active-pageButton': page === item })}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n\n        <button\n          aria-label=\"button\"\n          type=\"button\"\n          className=\"buttons right\"\n          disabled={page === totalPageCount.length}\n          onClick={onNext}\n        />\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Product } from '../types';\nimport './ProductsList.scss';\nimport { Loader } from './Loader/Loader';\nimport { Pagination } from './Pagination';\n\ntype Props = {\n  products: Product[],\n};\n\nexport const ProductsList: React.FC<Props> = React.memo(({ products }) => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(4);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const selectedValue = searchParams.get('sort') || '';\n  // const newProductsArr: Product[] = [];\n  // eslint-disable-next-line\n  // console.log(products);\n\n  // const onPageChange = (from: number, to: number) => {\n  //   const prodArr = [];\n\n  //   for (let i = 0; i < products.length; i += 1) {\n  //     if (i < to) {\n  //       if (i >= from - 1) {\n  //         prodArr.push(products[i]);\n  //       }\n  //     } else {\n  //       break;\n  //     }\n  //   }\n\n  //   return prodArr;\n  // };\n\n  // const x = onPageChange(1, 4);\n\n  // eslint-disable-next-line\n  // console.log(x);\n\n  // const from = (perPage * page - perPage) + 1;\n  // const to = perPage * page > products.length\n  //   ? products.length : perPage * page;\n\n  // for (let i = 0; i < products.length; i += 1) {\n  //   if (i < to) {\n  //     if (i >= from - 1) {\n  //       newProductsArr.push(products[i]);\n  //     }\n  //   } else {\n  //     break;\n  //   }\n  // }\n\n  // // eslint-disable-next-line\n  // console.log(newProductsArr);\n\n  const handleSort = (e: string) => {\n    if (e !== '') {\n      searchParams.set('sort', e);\n    } else {\n      searchParams.delete('sort');\n    }\n\n    navigate(`?${searchParams.toString()}`);\n  };\n\n  switch (selectedValue) {\n    case 'age':\n      products.sort((a, b) => {\n        return a.age - b.age;\n      });\n      break;\n\n    case 'price':\n      products.sort((a, b) => {\n        return a.price - b.price;\n      });\n      break;\n\n    case 'name':\n      products.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n      break;\n\n    default:\n  }\n\n  return (\n    <>\n      <div className=\"searchSection\">\n        <div className=\"searchSection__firstSelector\">\n          <p className=\"title-category__phones-mod\">Sort by</p>\n          <select\n            className=\"searchSection__selector\"\n            value={selectedValue}\n            onChange={(e) => handleSort(e.target.value)}\n          // onChange={(e) => navigate(`?sort=${e.target.value}`)}\n          >\n            <option className=\"optionValue\" value=\"\">Chose</option>\n            <option className=\"optionValue\" value=\"age\">Newest</option>\n            <option value=\"name\">Alphabetically</option>\n            <option value=\"price\">Cheapest</option>\n          </select>\n        </div>\n        <div className=\"searchSection__secondSelector\">\n          <p className=\"title-category__phones-mod\">Items on page</p>\n          <select\n            className=\"searchSection__selector\"\n            value={perPage}\n            onChange={e => setPerPage(+e.target.value)}\n          >\n            <option value=\"4\">4</option>\n            <option value=\"8\">8</option>\n            <option value=\"16\">16</option>\n            <option value=\"16\">all</option>\n          </select>\n        </div>\n      </div>\n      <div\n        style={{\n          // width: 272 * 3 + 32,\n          width: 272 * 4 + 48,\n        }}\n        data-cy=\"productList\"\n        className=\"products-wrapper\"\n      >\n        <ul className=\"cards__list\">\n          {products.length\n            ? (products.map(el => {\n              return (\n                <li key={el.id}>\n                  <div className=\"phone-container card__body\">\n                    <div className=\"img-container\">\n                      <img className=\"card__img\" src={el.imageUrl} alt=\"\" />\n                    </div>\n                    <p className=\"card__title\">{el.name}</p>\n                    <p className=\"card__description\">\n                      {`$${el.price}`}\n                      <span className=\"card__description-line\">{`$${el.price + 100}`}</span>\n                    </p>\n\n                    <span className=\"line\" />\n\n                    <div className=\"card__block\">\n                      <p className=\"card__block-parameters\">\n                        Screen\n                        <span\n                          className=\"card__block-parameter\"\n                        >\n                          {el.screen}\n                        </span>\n                      </p>\n                      <p className=\"card__block-parameters\">\n                        Capacity\n                        <span className=\"card__block-parameter\">\n                          {el.capacity}\n                        </span>\n                      </p>\n                      <p className=\"card__block-parameters\">\n                        RAM\n                        <span className=\"card__block-parameter\">{el.ram}</span>\n                      </p>\n                    </div>\n\n                    <div className=\"card__add-section\">\n                      <button\n                        type=\"button\"\n                        className=\"card__btn\"\n                      >\n                        Add to card\n                      </button>\n\n                      <div className=\"card__stroke-section\">\n                        <div className=\"card__stroke\" />\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              );\n            })) : (<Loader />)}\n        </ul>\n      </div>\n      <Pagination\n        total={products.length} // count of elements\n        perPage={perPage} // how much elements will show\n        setPage={setPage}\n        page={page}\n      />\n    </>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { getHotPriceProducts } from '../products';\nimport { Product } from '../types';\n\nimport { ProductsList } from './ProductsList';\n\nexport const Phones = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const onlyPhones = products.filter(el => el.type === 'phone');\n\n  useEffect(() => {\n    getHotPriceProducts()\n      .then(setProducts);\n  }, []);\n\n  return (\n    <>\n      <div className=\"title-phones\">\n        <h1>Mobile phones</h1>\n        <p className=\"title-category__phones-mod\">95 models</p>\n        <ProductsList products={onlyPhones} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './components/Layout';\nimport { HomePage } from './components/HomePage';\nimport { Phones } from './components/Phones';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"phones\" element={<Phones />} />\n        </Route>\n      </Routes>\n      <div className=\"homepage\" />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}